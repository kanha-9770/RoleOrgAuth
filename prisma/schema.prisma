generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum AuthProvider {
  EMAIL
  GOOGLE
  FACEBOOK
  GITHUB
  MOBILE
  MICROSOFT
}

enum OTPType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
  TWO_FACTOR
  REGISTRATION
  LOGIN
  MOBILE_VERIFICATION
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  PENDING
  PENDING_VERIFICATION
}

enum PermissionCategory {
  READ
  WRITE
  DELETE
  ADMIN
  SPECIAL
}

enum AccessLevel {
  READ
  WRITE
  FULL
}

// Models
model User {
  id              String         @id @default(cuid())
  email           String         @unique
  username        String?        @unique
  password        String?
  provider        AuthProvider?  @default(EMAIL)
  status          UserStatus     @default(PENDING)
  organizationId  String?        @map("organization_id")
  organization    Organization?   @relation(fields: [organizationId], references: [id], onDelete: SetNull)
  sessions        UserSession[]
  otpCodes        OTPCode[]
  permissions     UserPermission[]
  email_verified  Boolean?       @map("email_verified")
  first_name      String?        @map("first_name")
  last_name       String?        @map("last_name")
  login_attempts  Int?           @map("login_attempts")
  mobile          String?        @map("mobile")
  mobile_verified Boolean?       @map("mobile_verified")
  avatar          String?
  department      String?
  phone           String?
  location        String?
  joinDate        DateTime?      @map("join_date")
  unitAssignments UserUnitAssignment[]
  permissionOverrides UserPermissionOverride[]
  createdAt       DateTime       @default(now()) @map("created_at")
  updatedAt       DateTime       @updatedAt @map("updated_at")

  @@map("users")
  @@index([email])
  @@index([username])
  @@index([organizationId])
  @@index([department])
}

model OTPCode {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  code        String
  type        OTPType
  expiresAt   DateTime @map("expires_at")
  used        Boolean  @default(false)
  attempts    Int?     @map("attempts")
  identifier  String?  @map("identifier")
  verified    Boolean? @map("verified")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("otp_codes")
  @@index([userId])
  @@index([code])
  @@index([type])
  @@index([expiresAt])
}

model UserSession {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token        String   @unique
  expiresAt    DateTime @map("expires_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("user_sessions")
  @@index([userId])
  @@index([token])
  @@index([expiresAt])
}

model Organization {
  id          String   @id @default(cuid())
  name        String
  users       User[]
  organizationUnits OrganizationUnit[]
  roles       Role[]
  permissions Permission[]
  dataSharingRules DataSharingRule[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("organizations")
}

model UserPermission {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  role      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_permissions")
  @@index([userId])
}

model OrganizationUnit {
  id             String   @id @default(cuid())
  name           String
  description    String?
  organizationId String   @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  parentId       String?  @map("parent_id")
  parent         OrganizationUnit? @relation("UnitHierarchy", fields: [parentId], references: [id])
  children       OrganizationUnit[] @relation("UnitHierarchy")
  level          Int      @default(0)
  sortOrder      Int      @default(0) @map("sort_order")
  isActive       Boolean  @default(true) @map("is_active")
  unitRoles      UnitRoleAssignment[]
  userAssignments UserUnitAssignment[]
  sourceRules    DataSharingRule[] @relation("SourceUnit")
  targetRules    DataSharingRule[] @relation("TargetUnit")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("organization_units")
  @@index([organizationId])
  @@index([parentId])
  @@index([level])
  @@index([sortOrder])
}

model Role {
  id                String   @id @default(cuid())
  name              String
  description       String?
  organizationId    String   @map("organization_id")
  organization      Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  parentId          String?  @map("parent_id")
  parent            Role?    @relation("RoleHierarchy", fields: [parentId], references: [id])
  children          Role[]   @relation("RoleHierarchy")
  level             Int      @default(0)
  shareDataWithPeers Boolean @default(false) @map("share_data_with_peers")
  sortOrder         Int      @default(0) @map("sort_order")
  isActive          Boolean  @default(true) @map("is_active")
  unitAssignments   UnitRoleAssignment[]
  userAssignments   UserUnitAssignment[]
  rolePermissions   RolePermission[]
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@map("roles")
  @@index([organizationId])
  @@index([parentId])
  @@index([level])
  @@index([sortOrder])
}

model Permission {
  id             String   @id @default(cuid())
  name           String
  description    String?
  category       PermissionCategory
  resource       String
  organizationId String   @map("organization_id")
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  isActive       Boolean  @default(true) @map("is_active")
  rolePermissions RolePermission[]
  userOverrides   UserPermissionOverride[]
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("permissions")
  @@index([organizationId])
  @@index([category])
  @@index([resource])
}

model RolePermission {
  id           String   @id @default(cuid())
  roleId       String   @map("role_id")
  role         Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permissionId String   @map("permission_id")
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  granted      Boolean  @default(true)
  canDelegate  Boolean  @default(false) @map("can_delegate")
  inheritedFrom String? @map("inherited_from")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([roleId, permissionId])
  @@map("role_permissions")
  @@index([roleId])
  @@index([permissionId])
}

model UnitRoleAssignment {
  id     String @id @default(cuid())
  unitId String @map("unit_id")
  unit   OrganizationUnit @relation(fields: [unitId], references: [id], onDelete: Cascade)
  roleId String @map("role_id")
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([unitId, roleId])
  @@map("unit_role_assignments")
  @@index([unitId])
  @@index([roleId])
}

model UserUnitAssignment {
  id     String @id @default(cuid())
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  unitId String @map("unit_id")
  unit   OrganizationUnit @relation(fields: [unitId], references: [id], onDelete: Cascade)
  roleId String @map("role_id")
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  notes  String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([userId, unitId])
  @@map("user_unit_assignments")
  @@index([userId])
  @@index([unitId])
  @@index([roleId])
}

model UserPermissionOverride {
  id           String   @id @default(cuid())
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  permissionId String   @map("permission_id")
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  granted      Boolean
  reason       String
  expiresAt    DateTime? @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([userId, permissionId])
  @@map("user_permission_overrides")
  @@index([userId])
  @@index([permissionId])
  @@index([expiresAt])
}

model DataSharingRule {
  id           String   @id @default(cuid())
  name         String
  description  String?
  organizationId String @map("organization_id")
  organization Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  sourceUnitId String   @map("source_unit_id")
  sourceUnit   OrganizationUnit @relation("SourceUnit", fields: [sourceUnitId], references: [id], onDelete: Cascade)
  targetUnitId String   @map("target_unit_id")
  targetUnit   OrganizationUnit @relation("TargetUnit", fields: [targetUnitId], references: [id], onDelete: Cascade)
  dataTypes    String[] @map("data_types")
  accessLevel  AccessLevel @map("access_level")
  conditions   String[] @default([])
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("data_sharing_rules")
  @@index([organizationId])
  @@index([sourceUnitId])
  @@index([targetUnitId])
  @@index([accessLevel])
  @@index([isActive])
}

model FormModule {
  id          String   @id @default(cuid())
  name        String
  description String?
  icon        String?
  color       String?
  settings    Json     @default("{}")
  parentId    String?  @map("parent_id")
  parent      FormModule? @relation("ModuleHierarchy", fields: [parentId], references: [id])
  children    FormModule[] @relation("ModuleHierarchy")
  moduleType  String   @default("standard") @map("module_type")
  level       Int      @default(0)
  path        String?
  isActive    Boolean  @default(true) @map("is_active")
  sortOrder   Int      @default(0) @map("sort_order")
  forms       Form[]
  lookupSources LookupSource[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("form_modules")
  @@index([parentId])
  @@index([level])
  @@index([sortOrder])
  @@index([moduleType])
}

model Form {
  id                String   @id @default(cuid())
  moduleId          String   @map("module_id")
  module            FormModule @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  name              String
  description       String?
  settings          Json     @default("{}")
  tableMapping      FormTableMapping? @relation("FormToTableMapping")
  sections          FormSection[]
  records1          FormRecord1[] @relation("FormRecord1")
  records2          FormRecord2[] @relation("FormRecord2")
  records3          FormRecord3[] @relation("FormRecord3")
  records4          FormRecord4[] @relation("FormRecord4")
  records5          FormRecord5[] @relation("FormRecord5")
  records6          FormRecord6[] @relation("FormRecord6")
  records7          FormRecord7[] @relation("FormRecord7")
  records8          FormRecord8[] @relation("FormRecord8")
  records9          FormRecord9[] @relation("FormRecord9")
  records10         FormRecord10[] @relation("FormRecord10")
  records11         FormRecord11[] @relation("FormRecord11")
  records12         FormRecord12[] @relation("FormRecord12")
  records13         FormRecord13[] @relation("FormRecord13")
  records14         FormRecord14[] @relation("FormRecord14")
  records15         FormRecord15[] @relation("FormRecord15")
  events            FormEvent[]
  isPublished       Boolean  @default(false) @map("is_published")
  publishedAt       DateTime? @map("published_at")
  formUrl           String?  @map("form_url")
  allowAnonymous    Boolean  @default(true) @map("allow_anonymous")
  requireLogin      Boolean  @default(false) @map("require_login")
  maxSubmissions    Int?     @map("max_submissions")
  submissionMessage String?  @map("submission_message")
  conditional       Json?
  styling           Json?
  isEmployeeForm    Boolean? @map("isEmployeeForm")
  isUserForm        Boolean? @map("isUserForm")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  lookupSources     LookupSource[]

  @@map("forms")
  @@index([moduleId])
  @@index([isPublished])
}

model FormTableMapping {
  id           String   @id @default(cuid())
  formId       String   @unique @map("form_id")
  form         Form     @relation("FormToTableMapping", fields: [formId], references: [id], onDelete: Cascade)
  storageTable String   @map("storage_table")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_table_mappings")
  @@index([formId])
  @@index([storageTable])
}

model FormSection {
  id          String      @id @default(cuid())
  formId      String      @map("form_id")
  form        Form        @relation(fields: [formId], references: [id], onDelete: Cascade)
  title       String
  description String?
  order       Int         @default(0)
  columns     Int         @default(1)
  visible     Boolean     @default(true)
  collapsible Boolean     @default(false)
  collapsed   Boolean     @default(false)
  conditional Json?
  styling     Json?
  fields      FormField[]
  subforms    Subform[]
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  @@map("form_sections")
  @@index([formId])
  @@index([order])
}

model FormField {
  id           String       @id @default(cuid())
  sectionId    String?      @map("section_id")
  section      FormSection? @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  subformId    String?      @map("subform_id")
  subform      Subform?     @relation(fields: [subformId], references: [id], onDelete: Cascade)
  type         String
  label        String
  placeholder  String?
  description  String?
  defaultValue String?      @map("default_value")
  options      Json         @default("[]")
  validation   Json         @default("{}")
  visible      Boolean      @default(true)
  readonly     Boolean      @default(false)
  width        String       @default("full")
  order        Int          @default(0)
  conditional  Json?
  styling      Json?
  properties   Json?
  formula      String?
  rollup       Json?
  lookup       Json?
  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
  lookupRelations LookupFieldRelation[]

  @@map("form_fields")
  @@index([sectionId])
  @@index([subformId])
  @@index([type])
  @@index([order])
}

model Subform {
  id        String      @id @default(cuid())
  sectionId String      @map("section_id")
  section   FormSection @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  name      String
  order     Int         @default(0)
  fields    FormField[]
  records   SubformRecord[]
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map("subforms")
  @@index([sectionId])
  @@index([order])
}

model SubformRecord {
  id          String   @id @default(cuid())
  subformId   String   @map("subform_id")
  subform     Subform  @relation(fields: [subformId], references: [id], onDelete: Cascade)
  data        Json     @default("{}")
  employee_id String?
  amount      Decimal?
  date        DateTime?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("subform_records")
  @@index([subformId])
  @@index([employee_id])
  @@index([date])
}

model FormRecord1 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord1", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_1")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord2 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord2", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_2")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord3 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord3", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_3")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord4 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord4", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_4")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord5 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord5", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_5")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord6 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord6", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_6")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord7 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord7", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_7")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord8 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord8", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_8")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord9 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord9", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_9")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord10 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord10", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_10")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord11 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord11", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_11")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord12 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord12", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_12")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord13 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord13", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_13")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord14 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord14", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_14")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormRecord15 {
  id           String   @id @default(cuid())
  formId       String   @map("form_id")
  form         Form     @relation("FormRecord15", fields: [formId], references: [id], onDelete: Cascade)
  recordData   Json     @default("{}") @map("record_data")
  employee_id  String?
  amount       Decimal?
  date         DateTime?
  submittedBy  String?  @map("submitted_by")
  submittedAt  DateTime @default(now()) @map("submitted_at")
  ipAddress    String?  @map("ip_address")
  userAgent    String?  @map("user_agent")
  status       String   @default("submitted")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("form_records_15")
  @@index([formId])
  @@index([submittedAt])
  @@index([status])
  @@index([employee_id])
  @@index([date])
}

model FormEvent {
  id        String   @id @default(cuid())
  formId    String   @map("form_id")
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  eventType String   @map("event_type")
  payload   Json     @default("{}")
  sessionId String?  @map("session_id")
  userAgent String?  @map("user_agent")
  ipAddress String?  @map("ip_address")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("form_events")
  @@index([formId])
  @@index([eventType])
  @@index([createdAt])
}

model FieldType {
  id           String   @id @default(cuid())
  name         String   @unique
  label        String
  category     String
  icon         String
  description  String
  defaultProps Json     @default("{}") @map("default_props")
  active       Boolean  @default(true)
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("field_types")
  @@index([category])
  @@index([active])
}

model LookupSource {
  id              String   @id @default(cuid())
  name            String
  type            String
  description     String?
  sourceModuleId  String?  @map("source_module_id")
  sourceModule    FormModule? @relation(fields: [sourceModuleId], references: [id], onDelete: Cascade)
  sourceFormId    String?  @map("source_form_id")
  sourceForm      Form?    @relation(fields: [sourceFormId], references: [id], onDelete: Cascade)
  apiEndpoint     String?  @map("api_endpoint")
  staticData      Json?    @map("static_data")
  active          Boolean  @default(true)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  fieldRelations  LookupFieldRelation[]

  @@map("lookup_sources")
  @@index([type])
  @@index([active])
  @@index([sourceModuleId])
  @@index([sourceFormId])
}

model LookupFieldRelation {
  id              String      @id @default(cuid())
  lookupSourceId  String      @map("lookup_source_id")
  lookupSource    LookupSource @relation(fields: [lookupSourceId], references: [id], onDelete: Cascade)
  formFieldId     String      @map("form_field_id")
  formField       FormField   @relation(fields: [formFieldId], references: [id], onDelete: Cascade)
  formId          String      @map("form_id")
  moduleId        String      @map("module_id")
  displayField    String?     @map("display_field")
  valueField      String?     @map("value_field")
  multiple        Boolean?
  searchable      Boolean?
  filters         Json        @default("{}")
  createdAt       DateTime    @default(now()) @map("created_at")
  updatedAt       DateTime    @updatedAt @map("updated_at")

  @@map("lookup_field_relations")
  @@index([lookupSourceId])
  @@index([formFieldId])
  @@index([formId])
  @@index([moduleId])
}
